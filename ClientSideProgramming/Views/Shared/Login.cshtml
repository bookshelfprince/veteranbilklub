@using ClientSideProgramming.Models
@model LoginViewModel

<div id="login" class="page">
	<section id="loginForm">
		@using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
		{
			@Html.AntiForgeryToken()

			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			<div class="form-group">
				@Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
				<div class="col-md-10">
					@Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
					@Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
				<div class="col-md-10">
					@Html.PasswordFor(m => m.Password, new { @class = "form-control" })
					@Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
				</div>
			</div>
			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<div class="checkbox">
						@Html.CheckBoxFor(m => m.RememberMe)
						@Html.LabelFor(m => m.RememberMe)
					</div>
				</div>
			</div>
			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Login" class="text-white btn btn-primary mt-2" />
					<input onclick="show('register')" class="text-white btn btn-success mt-2" type="button" value="Opret" />
				</div>
			</div>
		}
	</section>
</div>
<div id="register" class="page" style="display: none;">
	@{
		Html.RenderAction("Register", "Account");
	 }
</div>
<script src="~/Scripts/Login.js" type="text/javascript"></script>
@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}